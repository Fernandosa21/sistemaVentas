[{"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\index.js":"1","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\reportWebVitals.js":"2","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\App.js":"3","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\sales\\sales.js":"4","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\navBar\\navBar.js":"5","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\sales\\cutOff.js":"6","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\orders\\orders.js":"7","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\SaleService.js":"8","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\SaleDetailsService.js":"9","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\CutoffService.js":"10"},{"size":517,"mtime":1610501526764,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1610501526765,"results":"13","hashOfConfig":"12"},{"size":872,"mtime":1611190121328,"results":"14","hashOfConfig":"12"},{"size":2448,"mtime":1611196090908,"results":"15","hashOfConfig":"12"},{"size":796,"mtime":1610584895751,"results":"16","hashOfConfig":"12"},{"size":8103,"mtime":1611204976482,"results":"17","hashOfConfig":"12"},{"size":9138,"mtime":1611195090921,"results":"18","hashOfConfig":"12"},{"size":556,"mtime":1611195090923,"results":"19","hashOfConfig":"12"},{"size":218,"mtime":1610988785493,"results":"20","hashOfConfig":"12"},{"size":671,"mtime":1611203971658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vwf02w",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\index.js",[],["44","45"],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\reportWebVitals.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\App.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\sales\\sales.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\navBar\\navBar.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\sales\\cutOff.js",["46"],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\components\\orders\\orders.js",["47","48"],"import React, { useState, useEffect } from \"react\";\r\nimport { FiChevronRight, FiChevronLeft } from \"react-icons/fi\";\r\nimport { getSales, putSale } from '../../services/SaleService';\r\nimport { getSaleDetails } from '../../services/SaleDetailsService';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Orders = () => {\r\n  useEffect(() => {\r\n    callApi();\r\n  },\r\n    []);\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const callApi = async () => {\r\n    try {\r\n      const sales = await getSales(true);\r\n      setOrders(sales.sales)\r\n    } catch (err) {\r\n      handleAlert(\"error\", \"Hubo un error de conexión\")\r\n    }\r\n  }\r\n\r\n  const handleAlert = (type, message) => {\r\n    setOpen(true);\r\n    setMessage(message)\r\n    setType(type)\r\n  }\r\n\r\n  const [details, setDetails] = useState(false);\r\n  const [selectedOrder, setSelectedOrder] = useState();\r\n  const [orders, setOrders] = useState([]);\r\n  const [selectedMethod, setSelectedMethod] = useState(\"\");\r\n  const [cash, setCash] = useState(0);\r\n  const [change, setChange] = useState(0);\r\n  const [card, setCard] = useState(\"\");\r\n  const [nip, setNip] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const selectOrder = async (order) => {\r\n    try {\r\n      const saleDetails = await getSaleDetails(order.id_sale);\r\n      const currentOrder = {\r\n        ...order,\r\n        products: saleDetails.saleDetails\r\n      }\r\n      setSelectedOrder(currentOrder)\r\n      setDetails(true);\r\n    } catch (err) {\r\n      setOpen(true);\r\n      setMessage(\"Hubo un error de conexión\")\r\n      setType(\"error\")\r\n    }\r\n  }\r\n\r\n  const calculateTotal = () => {\r\n    const total = selectedOrder.products.reduce((acc, item) => acc + (item.price * item.quantity), 0)\r\n    return total.toFixed(2)\r\n  }\r\n\r\n  const calculateChange = () => {\r\n    console.log(calculateTotal());\r\n    const total = calculateTotal();\r\n    if (parseFloat(cash) < total) {\r\n      handleAlert(\"error\", \"El monto en efectivo debe ser mayor que el total de la orden\");\r\n    }\r\n    else {\r\n      setChange((cash - total).toFixed(2))\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.target.name) {\r\n      case 'cash':\r\n        setCash(event.target.value);\r\n        break;\r\n      case 'card':\r\n        setCard(event.target.value);\r\n        break;\r\n      case 'nip':\r\n        setNip(event.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const pay = async () => {\r\n    if ((selectedMethod === 'Efectivo' && cash === \"\") || (selectedMethod === \"Tarjeta\" && (card === \"\" || nip === \"\"))) {\r\n      handleAlert(\"error\", \"No debe haber campos vacios\");\r\n    }\r\n    else {\r\n      try{\r\n        await putSale(selectedOrder.id_order, selectedMethod, card)\r\n        handleAlert(\"success\", \"El pago se aplico con exito\");\r\n      }\r\n      catch(err){\r\n        handleAlert(\"error\", \"Hubo un error al registrar el pago\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const renderOrders = () => {\r\n    return (\r\n      <div className=\"col-8 \">\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={type}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <h1>Ordenes</h1>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\" scope=\"col\">#</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => (\r\n              <tr key={index}>\r\n                <th className=\"text-center\" scope=\"row\">{order.id_order}</th>\r\n                <td className=\"text-right\">\r\n                  <button type=\"button\" class=\"btn btn-link\" onClick={() => selectOrder(order)}>\r\n                    <FiChevronRight />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const goBack = () => {\r\n    setDetails(false);\r\n    setCash(\"\");\r\n    setChange(0);\r\n    setCard(\"\");\r\n    setNip(\"\");\r\n    setSelectedMethod(\"\");\r\n  }\r\n\r\n  const renderOrderDetail = () => {\r\n    return (\r\n      <div className=\"col-8 \">\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={type}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <h1>Detallas de Ordenes</h1>\r\n        <div className=\"col-8\">\r\n          <button type=\"button\" class=\"btn btn-link\" onClick={() => goBack()}>\r\n            <FiChevronLeft />\r\n            <text>Atras</text>\r\n          </button>\r\n        </div>\r\n        <div className=\"col-8 row\">\r\n          <text>Orden Numero:</text>\r\n          <text> {selectedOrder.id_order}</text>\r\n        </div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\" scope=\"col\">Cantidad</th>\r\n              <th className=\"text-center\" scope=\"col\">Producto</th>\r\n              <th className=\"text-center\" scope=\"col\">Precio</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedOrder.products.map((product, index) => (\r\n              <tr key={index}>\r\n                <td className=\"text-center\">{product.quantity}</td>\r\n                <td className=\"text-center\">{product.name}</td>\r\n                <td className=\"text-center\">{product.price}</td>\r\n              </tr>\r\n            ))}\r\n            <td className=\"text-center\"></td>\r\n            <th className=\"text-center\">Total</th>\r\n            <td className=\"text-center\">{calculateTotal()}</td>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"row d-flex justify-content-end\">\r\n          <h5 className=\"text-right m-5\">Metodo de Pago</h5>\r\n          <div className=\"text-right m-5\">\r\n            <button type=\"button\" class=\"btn btn-outline-info btn-lg\" onClick={() => setSelectedMethod('Efectivo')}>Efectivo</button>\r\n          </div>\r\n          <div className=\"text-right m-5\">\r\n            <button type=\"button\" class=\"btn btn-outline-info btn-lg\" onClick={() => setSelectedMethod('Tarjeta')}>Tarjeta</button>\r\n          </div>\r\n        </div>\r\n        {selectedMethod !== \"\" ?\r\n          renderMethods()\r\n          : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderMethods = () => {\r\n    return (\r\n      <div>\r\n        { selectedMethod === 'Efectivo' ?\r\n          <div>\r\n            <h5>Pago en Efectivo</h5>\r\n            <text>Ingresa los datos correspondientes</text>\r\n            <div className=\"row d-flex justify-content-between mt-4 mb-4\">\r\n              <div class=\"d-flex justify-content-between ml-3\">\r\n                <text className=\"font-weight-bold mr-3\">Monto</text>\r\n                <input type=\"text\" name=\"cash\" value={cash} onChange={handleChange} class=\"form-control\" />\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <button type=\"button\" class=\"btn btn-outline-info btn-lg\" onClick={() => calculateChange()}>Calcular</button>\r\n              </div>\r\n            </div>\r\n            {change !== 0                    ?\r\n              <div className=\"row\">\r\n                <div class=\"d-flex justify-content-between m-3\">\r\n                  <text className=\"font-weight-bold mr-3\">Cambio</text>\r\n                  <input type=\"text\" name=\"change\" value={change} class=\"form-control\" disabled />\r\n                </div>\r\n              </div>\r\n              : null}\r\n          </div>\r\n          :\r\n          <div>\r\n            <h5>Pago con Tarjeta</h5>\r\n            <text>Ingresa los datos correspondientes</text>\r\n            <div className=\"row d-flex justify-content-between mt-4 mb-4\">\r\n              <div class=\"d-flex justify-content-between m-3 col\">\r\n                <text className=\"font-weight-bold mr-3\">Numero de tarjeta</text>\r\n                <input type=\"text\" name=\"card\" value={card} onChange={handleChange} class=\"form-control\" />\r\n              </div>\r\n              <div class=\"d-flex justify-content-between m-3 col\">\r\n                <text className=\"font-weight-bold mr-3\">Nip</text>\r\n                <input type=\"password\" name=\"nip\" value={nip} onChange={handleChange} class=\"form-control\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className=\"text-right m-3\">\r\n          <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => pay()}>Pagar</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 d-flex justify-content-center\">\r\n      {!details ?\r\n        renderOrders()\r\n        :\r\n        renderOrderDetail()\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;","C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\SaleService.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\SaleDetailsService.js",[],"C:\\Users\\Fernando\\Documents\\GitHub\\sistemaVentas\\src\\services\\CutoffService.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":89,"column":11,"nodeType":"55","messageId":"56","endLine":89,"endColumn":35},{"ruleId":"57","severity":1,"message":"58","line":12,"column":5,"nodeType":"59","endLine":12,"endColumn":7,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"54","line":108,"column":11,"nodeType":"55","messageId":"56","endLine":108,"endColumn":35},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callApi'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [callApi]",{"range":"66","text":"67"},[425,427],"[callApi]"]